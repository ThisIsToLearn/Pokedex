{"ast":null,"code":"import POKEMONS from \"../models/mock-pokemon\";\nexport default class PokemonService {\n  static getPokemons() {\n    if (this.isDev) {\n      return fetch('http://localhost:3000/pokemons').then(response => response.json()).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id) {\n    if (this.isDev) {\n      return fetch(`http://localhost:3000/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemon.find(pokemon => id === pokemon.id));\n    });\n  }\n\n  static updatePokemon(pokemon) {\n    if (this.isDev) {\n      return fetch(`http://localhost:3000/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const {\n        id\n      } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    });\n  }\n\n  static deletePokemon(pokemon) {\n    if (this.isDev) {\n      return fetch(`http://localhost:3000/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const {\n        id\n      } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    });\n  }\n\n  static addPokemon(pokemon) {\n    delete pokemon.created;\n\n    if (this.isDev) {\n      return fetch(`http://localhost:3000/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    });\n  }\n\n  static searchPokemon(term) {\n    if (this.isDev) {\n      return fetch(`http://localhost:3000/pokemons?q=${term}`).then(response => response.json()).catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error) {\n    console.error(error);\n  }\n\n}\nPokemonService.pokemons = POKEMONS;\nPokemonService.isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';","map":{"version":3,"names":["POKEMONS","PokemonService","getPokemons","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","getPokemon","id","data","isEmpty","pokemon","find","updatePokemon","method","body","JSON","stringify","headers","index","findIndex","deletePokemon","filter","addPokemon","created","push","searchPokemon","term","results","name","includes","Object","keys","length","console","process","env","NODE_ENV"],"sources":["/Users/guiheuxsarah/Desktop/REACT-POKEMONS-APP/src/services/pokemon-service.ts"],"sourcesContent":["\nimport Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n\nexport default class PokemonService {\n\n  static pokemons:Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3000/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon|null> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3000/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      resolve(this.pokemon.find(pokemon => id === pokemon.id));\n    }); \n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3000/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3000/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    delete pokemon.created;\n\n    if(this.isDev) {\n      return fetch(`http://localhost:3000/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3000/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}